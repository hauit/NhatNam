
@{
    ViewBag.Title = "StockerItem";
}

@(Html.DevExtreme().DataGrid<NNworking.Models.C222_StockerItem>()
    .DataSource(ds => ds.WebApi()
        .RouteName("C222_StockerItemApi")
        .LoadAction("Get").LoadParams(new { catergory = ViewBag.Catergory })
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("ID")
    )
    .ID("dxStockerItem")
    .Paging(page => page.PageSize(10))
    .Pager(pager => pager.ShowPageSizeSelector(true)
        .ShowInfo(true)
        .AllowedPageSizes(new List<int> { 10, 20, 30, 50, 100, 200 })
    )
    .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
        .DescendingText("ID")
    )
    .OnExporting("onExportingDatagridToExcel").Export(e => e.Enabled(true)
        //.FileName("StockerItem")
        .AllowExportSelectedData(true))
    .ColumnAutoWidth(true)
    .FilterRow(fil => fil.Visible(true))
    .FilterPanel(fi => fi.Visible(true))
    .SearchPanel(search => search.Visible(true)
        .HighlightSearchText(true)
        .Width(500)
    )
    .Columns(columns => {

        columns.AddFor(m => m.ID).AllowEditing(false).Caption("ID");

        columns.AddFor(m => m.ItemID).Caption("Mã sản phẩm");

        columns.AddFor(m => m.ItemName).Caption("Tên sản phẩm");

        columns.AddFor(m => m.PurchasingUnit).Caption("Đơn vị mua").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_StokerUnitApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("Name")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.UsingUnit).Caption("Đơn vị sử dụng").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_StokerUnitApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("Name")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.MOQ).Caption("Lượng tối thiểu");

        columns.AddFor(m => m.Rounding).Caption("Lượng làm tròn");

        columns.AddFor(m => m.Catergory).Caption("Danh mục").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_StokerCatergoryApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("Catergory")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.Supplier).Caption("Nhà cung cấp").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_PartnerApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("Name")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.Maker).Caption("Nhà sản xuất").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_PartnerApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("Name")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.Type).Caption("Loại sản phẩm").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_StockerItemTypeApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("ItemType")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.Note).Caption("Ghi chú");

        columns.AddFor(m => m.Lenght).Caption("Chiều dài");

        columns.AddFor(m => m.MeCutLenght).Caption("Chiều dài me");

        columns.AddFor(m => m.MeNumber).Caption("Số me");
    })
    .Editing(e => e
        .Mode( GridEditMode.Popup)
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
    )
    .OnInitNewRow("onInitNewRow")
)


<script>
    function onInitNewRow(e){
        e.data.ID = 0;
        e.data.MOQ = 1;
        e.data.Rounding = 1;
        e.data.Lenght = 0;
        e.data.MeCutLenght = 0;
        e.data.MeNumber = 0;
    }
</script>

