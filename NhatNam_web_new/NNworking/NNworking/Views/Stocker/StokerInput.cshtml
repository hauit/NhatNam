
@{
    ViewBag.Title = "Nhập kho dụng cụ";
}

<div class="box box-body">
    <table width="1000px">
        <tr>
            <td>
                &nbsp;
                @(Html.DevExtreme().Button()
                            .Text("Import nhập kho")
                            .ID("btnImportStokerInput")
                            .Type(ButtonType.Normal)
                            .Width(250)
                )
            </td>
        </tr>
    </table>
</div>

<div id="background-popup"></div>
<div id="NotifyDiv">
</div>
<input id="File2" type="file" name="file" class="hide" onchange="ChoiceFilePhu()" />

<script>
    var popupStatus = 0;
    function disablePopup() {
        if (popupStatus == 1) {
            $("#NotifyDiv").fadeOut(200);
            $("#background-popup").fadeOut(200);
            popupStatus = 0;
        }
    }

    $("#background-popup").click(function () {
        disablePopup();
    });

    function loadBackgroundToPopup() {
        $("#background-popup").css("opacity", "0.2");
        $("#background-popup").fadeIn(200);
    }

    /** load các popup của các phần **/
    function loadListNoPopup() {
        if (popupStatus == 0) {
            $("#NotifyDiv").fadeIn(200);
            loadBackgroundToPopup();
            popupStatus = 1;
        }
    }

    $(document).on('click', '#btnImportStokerInput', function () {
        $('#File2').trigger('click');
    });

    function ChoiceFilePhu() {
        var file = $('#File2').get(0);
        var alo = file.files;
        var form = new FormData();
        form.append(alo[0].name, alo[0]);
        form.append('staffID', '@Session["StaffID"].ToString()');
        $.ajax({
            url: '@Url.Action("ImportStokerInput", "AllDept")',
            type: "POST",
            contentType: false,
            processData: false,
            data: form,
            success: function (data) {
                alert(data.Values);
                if (data.Status != "OK") {
                    return;
                }

                if (data.Errors.length > 0)
                {
                    var html = '';
                    html += '<table class="table">                      ';
                    html += '    <tbody>                                ';
                    html += '        <tr>                               ';
                    html += '            <th>Dòng</th>                  ';
                    html += '            <th>Trạng thái</th>            ';
                    html += '            <th>Nội dung</th>              ';
                    html += '        </tr>                              ';
                    html += '    </tbody>                               ';
                    html += '    <tbody id="ThongBaoOrderNoLoi_body">   ';
                    $.each(data.Errors, function (i, val) {
                        html += '        <tr>                           ';
                        html += '            <td>' + val.Line + '</td>  ';
                        html += '            <td>' + val.Status + '</td>';
                        html += '            <td>' + val.Des + '</td>   ';
                        html += '        </tr>                          ';
                    });
                    html += '    </tbody>                               ';
                    html += '</table>                                   ';
                    $("#NotifyDiv").html(html);
                    loadListNoPopup();
                }

                $('#File2').val('');
            },
        });
    }
</script>

@(Html.DevExtreme().DataGrid<NNworking.Models.C222_StokerInput>()
        .DataSource(ds => ds.WebApi()
            .RouteName("C222_StokerInputApi")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("ID")
        )
        .ID("dxStokerInput")
        .Paging(page => page.PageSize(10))
        .Pager(pager => pager.ShowPageSizeSelector(true)
            .ShowInfo(true)
            .AllowedPageSizes(new List<int> { 10, 20, 30 })
        )
        .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
            .DescendingText("PartNo")
        )
        .ColumnAutoWidth(true)
        .FilterRow(fil => fil.Visible(true))
        .FilterPanel(fi => fi.Visible(true))
        .SearchPanel(search => search.Visible(true)
            .HighlightSearchText(true)
            .Width(500)
        )
        .OnExporting("onExportingDatagridToExcel").Export(e => e.Enabled(true)
            //.FileName("DanhsachHangNhapKho")
            .AllowExportSelectedData(true))
        //.HeaderFilter(headFil => headFil.Visible(true))
        .ShowColumnHeaders(true)
        .ShowRowLines(true)
        .RemoteOperations(true)
        .Columns(columns =>
        {

            columns.AddFor(m => m.ID).AllowEditing(false);

            columns.AddFor(m => m.Date).Caption("Ngày");

            columns.AddFor(m => m.StaffID).Caption("Nhân viên");

            columns.AddFor(m => m.OrderNo).Caption("Đơn hàng");

            columns.AddFor(m => m.PartID).AllowEditing(true).Caption("Tên chi tiết");

            columns.AddFor(m => m.Qty).Caption("Số lượng");

            columns.AddFor(m => m.FromDept).Lookup(lup =>
                lup.DataSource(ds => ds.WebApi()
                    .RouteName("C222_DepartmentApi")
                    .LoadAction("Get")
                )
                .DisplayExpr("DeptName")
                .ValueExpr("DeptCode")
            ).Caption("Bộ phận gửi");

            columns.AddFor(m => m.NCC).Lookup(lup =>
                lup.DataSource(ds => ds.WebApi()
                    .RouteName("C222_PartnerApi")
                    .LoadAction("Get")
                )
                .DisplayExpr("Name")
                .ValueExpr("Code")
            ).Caption("Nhà cung cấp");

            columns.AddFor(m => m.GiayXN).Caption("Giấy xác nhận");

            columns.AddFor(m => m.Note).Caption("Ghi chú");

            columns.AddFor(m => m.Deleted).Visible(false).Caption("Đã xóa").AllowEditing(false);
        })
        .Editing(e => e
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
            .Mode(GridEditMode.Form)
        )
        .OnInitNewRow("onInitNewRow")
)

<script>
    function onInitNewRow(e) {
        e.data.ID = 0;
        e.data.StaffID = '@Session["StaffID"]';
        e.data.Date = new Date();
        e.data.Qty = 0;
        e.data.Deleted = false;
    }
</script>