
@{
    
}

<div class="box box-body">
    <table width="1000px">
        <tr>
            <td>
                &nbsp;
                @(Html.DevExtreme().Button()
                            .Text("Import sản phẩm")
                            .ID("btnImportStokerTool")
                            .Type(ButtonType.Normal)
                            .Width(250)
                )
            </td>
        </tr>
    </table>
</div>

<div id="background-popup"></div>
<div id="NotifyDiv">
</div>
<input id="File2" type="file" name="file" class="hide" onchange="ChoiceFilePhu()" />

<script>
    var popupStatus = 0;
    function disablePopup() {
        if (popupStatus == 1) {
            $("#NotifyDiv").fadeOut(200);
            $("#background-popup").fadeOut(200);
            popupStatus = 0;
        }
    }

    $("#background-popup").click(function () {
        disablePopup();
    });

    function loadBackgroundToPopup() {
        $("#background-popup").css("opacity", "0.2");
        $("#background-popup").fadeIn(200);
    }

    /** load các popup của các phần **/
    function loadListNoPopup() {
        if (popupStatus == 0) {
            $("#NotifyDiv").fadeIn(200);
            loadBackgroundToPopup();
            popupStatus = 1;
        }
    }

    $(document).on('click', '#btnImportStokerTool', function () {
        $('#File2').trigger('click');
    });

    function ChoiceFilePhu() {
        var file = $('#File2').get(0);
        var alo = file.files;
        var form = new FormData();
        form.append(alo[0].name, alo[0]);
        form.append('staffID', '@Session["StaffID"].ToString()');
        $.ajax({
            url: '@Url.Action("ImportStokerTool", "AllDept")',
            type: "POST",
            contentType: false,
            processData: false,
            data: form,
            success: function (data) {
                alert(data.Values);
                if (data.Status != "OK") {
                    return;
                }

                if (data.Errors.length > 0)
                {
                    var html = '';
                    html += '<table class="table">                      ';
                    html += '    <tbody>                                ';
                    html += '        <tr>                               ';
                    html += '            <th>Dòng</th>                  ';
                    html += '            <th>Trạng thái</th>            ';
                    html += '            <th>Nội dung</th>              ';
                    html += '        </tr>                              ';
                    html += '    </tbody>                               ';
                    html += '    <tbody id="ThongBaoOrderNoLoi_body">   ';
                    $.each(data.Errors, function (i, val) {
                        html += '        <tr>                           ';
                        html += '            <td>' + val.Line + '</td>  ';
                        html += '            <td>' + val.Status + '</td>';
                        html += '            <td>' + val.Des + '</td>   ';
                        html += '        </tr>                          ';
                    });
                    html += '    </tbody>                               ';
                    html += '</table>                                   ';
                    $("#NotifyDiv").html(html);
                    loadListNoPopup();
                }

                $('#File2').val('');
            },
        });
    }
</script>


@(Html.DevExtreme().DataGrid<NNworking.Models.View_222_StokerTool>()
    .DataSource(ds => ds.WebApi()
        .RouteName("C222_StokerToolApi")
        .LoadAction("Get").LoadParams(new { catergory = ViewBag.Catergory })
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("ToolNo")
    )
    .ID("dxDataGridSanPham")
    .Paging(page => page.PageSize(10))
    .Pager(pager => pager.ShowPageSizeSelector(true)
        .ShowInfo(true)
        .AllowedPageSizes(new List<int> { 10, 20, 30, 50, 100, 200 })
    )
    .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
        .DescendingText("ID")
    )
    .OnExporting("onExportingDatagridToExcel").Export(e => e.Enabled(true)
        //.FileName("DanhSachSanPham")
        .AllowExportSelectedData(true))
    .ColumnAutoWidth(true)
    .FilterRow(fil => fil.Visible(true))
    .FilterPanel(fi => fi.Visible(true))
    .SearchPanel(search => search.Visible(true)
        .HighlightSearchText(true)
        .Width(500)
    )
    .Columns(columns => {

        columns.AddFor(m => m.ID);

        columns.AddFor(m => m.ToolNo);

        columns.AddFor(m => m.ToolName);

        columns.AddFor(m => m.Unit).Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_StokerUnitApi")
                .LoadAction("Get")
                .Key("ID")
            )
            .DisplayExpr("Name")
            .ValueExpr("ID")
        );

        columns.AddFor(m => m.CatergoryID).Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C222_StokerCatergoryApi")
                .LoadAction("GetCatergory")
                .Key("Alias")
            )
            .DisplayExpr("Catergory")
            .ValueExpr("Alias")
        );

        columns.AddFor(m => m.InputQty).Caption("Số lượng nhập");

        columns.AddFor(m => m.OutputQty).Caption("Số lượng xuất");

        columns.AddFor(m => m.AvailableQty).Caption("Số lượng tồn");
    })
    .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
    )
    .OnInitNewRow("onInitNewRow")
)

<script>
    function onInitNewRow(e) {
        e.data.ID = 0;
    }
</script>

