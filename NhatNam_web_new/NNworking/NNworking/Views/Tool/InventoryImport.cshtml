
<div class="box box-body">
    @(Html.DevExtreme().TextBox()
        .ID("txtPartNo")
        .Placeholder("Tìm kiếm phiếu nhập theo chi tiết")
        .Width("500")
        .OnEnterKey("SearchByPartNo")
    )
    <table width="1000px">
        <tr>
            <td>                
                &nbsp;&nbsp;&nbsp;Đơn vị chuyển:
                @(Html.DevExtreme().Lookup()
                .DataSource(d => d.WebApi()
                    .RouteName("C242_InventoryReceivedApi")
                    .LoadAction("GetAllPartner")
                    .Key("Code")
                )
                .ID("fromDept")
                .DisplayExpr("Name")
                .ValueExpr("Code")
                )
            </td>
            <td>                
                &nbsp;&nbsp;&nbsp;Đơn vị nhận:
                @(Html.DevExtreme().Lookup()
                .DataSource(d => d.WebApi()
                    .RouteName("C242_InventoryReceivedApi")
                    .LoadAction("GetAllPartner")
                    .Key("Code")
                )
                .ID("toDept")
                .DisplayExpr("Name")
                .ValueExpr("Code")
                )
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
            </td>
        </tr>
    </table>
    &nbsp;
    @(Html.DevExtreme().Button()
                    .Text("Import giao nhận")
                    .ID("btnTracking")
                    .Type(ButtonType.Normal)
                    .Width(150)
    )</br>
    @(Html.DevExtreme().Button()
                    .Text("Quét QR code")
                    .ID("btnTracking2")
                    .Type(ButtonType.Normal)
                    .Width(150)
                    .OnClick("ShowAddNewPopup")
    )
    @*@(Html.DevExtreme().Button()
        .Text("Tìm kiếm")
        .ID("btnView")
        .Type(ButtonType.Normal)
        .Width(90)
        .OnClick("SearchByPartNo")
    )*@
</div>
<h2> Danh sách phiếu nhập </h2>
@(Html.DevExtreme().DataGrid<NNworking.Models.C242_InventoryReceived>()
    .DataSource(ds => ds.WebApi()
        .RouteName("C242_InventoryReceivedApi")
        .LoadAction("GetInventoryReceived").LoadParams(new { partNo = new JS("GetPartNoForSearch") })
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("ID")
    )
    .ID("dxInventoryReceived")
    .Paging(page => page.PageSize(10))
    .Pager(pager => pager.ShowPageSizeSelector(true)
        .ShowInfo(true)
        .AllowedPageSizes(new List<int> { 10, 20, 30, 50, 100, 200 })
    )
    .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
        .DescendingText("Date")
    )
    .ColumnAutoWidth(true)
    .FilterRow(fil => fil.Visible(true))
    .FilterPanel(fi => fi.Visible(true))
    .SearchPanel(search => search.Visible(true)
        .HighlightSearchText(true)
        .Width(500)
    )
    //.HeaderFilter(headFil => headFil.Visible(true))
    .ShowColumnHeaders(true)
    .ShowRowLines(true)
    .RemoteOperations(true)
    .Columns(columns =>
    {

        columns.AddFor(m => m.ID).AllowEditing(false).Visible(false);

        columns.AddFor(m => m.Date).Caption("Ngày nhập");

        columns.AddFor(m => m.StaffID).Caption("Nhân viên nhập");

        columns.AddFor(m => m.Import).Visible(false);
        columns.AddFor(m => m.ImportFrom).Caption("Đơn vị cung cấp").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C242_InventoryReceivedApi")
                .LoadAction("GetAllPartner")
                .Key("Code")
            )
            .DisplayExpr("Name")
            .ValueExpr("Code")
        );

        columns.AddFor(m => m.ReceiveDept).Caption("Đơn vị nhận").Lookup(lup =>
            lup.DataSource(ds => ds.WebApi()
                .RouteName("C242_InventoryReceivedApi")
                .LoadAction("GetAllPartner")
                .Key("Code")
            )
            .DisplayExpr("Name")
            .ValueExpr("Code")
        );


        columns.AddFor(m => m.Note).Caption("Ghi chú");

        columns.AddFor(m => m.Deleted).Visible(false);
    })
    .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        //.AllowDeleting(true)
    )
    .OnInitNewRow("OnInitRow")
    .MasterDetail(md =>
    {
        md.Enabled(true);
        md.Template(@<text>
        <div class="master-detail-caption"> Chi tiết phiếu nhập số: <%- data.ID %></div>
        @(Html.DevExtreme().DataGrid<NNworking.Models.C242_InventoryReceivedDetail>()
            .DataSource(ds => ds.WebApi()
                .RouteName("C242_InventoryReceivedDetailApi")
                .LoadAction("Get")
                .LoadParams(new { importID = new JS("data.ID") })
                .InsertAction("Post")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("ID")
            )
            .ID("dxInventoryReceivedDetail")
            .Paging(page => page.PageSize(10))
            .Pager(pager => pager.ShowPageSizeSelector(true)
                .ShowInfo(true)
                .AllowedPageSizes(new List<int> { 10, 20, 30 })
            )
            .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
                .DescendingText("PartNo")
            )
            .ColumnAutoWidth(true)
            .FilterRow(fil => fil.Visible(true))
            .FilterPanel(fi => fi.Visible(true))
            .SearchPanel(search => search.Visible(true)
                .HighlightSearchText(true)
                .Width(500)
            )
            //.HeaderFilter(headFil => headFil.Visible(true))
            .ShowColumnHeaders(true)
            .ShowRowLines(true)
            .RemoteOperations(true)
            .Columns(columns =>
            {
                columns.AddFor(m => m.ID).AllowEditing(false).Visible(false);

                columns.AddFor(m => m.VoucherID).AllowEditing(false).Caption("Số phiếu nhập");

                columns.AddFor(m => m.OrderNumber).SetCellValue("InputOrder").Caption("Số order");

                columns.AddFor(m => m.PartNo).Caption("Tên chi tiết").AllowEditing(false);

                columns.AddFor(m => m.Qty).Caption("Số lượng");

                columns.AddFor(m => m.GiaDe).Caption("Vị trí").Lookup(lup =>
                    lup.DataSource(ds => ds.WebApi()
                        .RouteName("C242_TrackingViTriApi")
                        .LoadAction("Get")
                        .Key("GiaCode")
                    )
                    .DisplayExpr("GiaCode")
                    .ValueExpr("GiaCode")
                );

                columns.AddFor(m => m.Price).Caption("Đơn giá");

                columns.AddFor(m => m.Note).Caption("Ghi chú");

                columns.AddFor(m => m.NguoiNhan).Caption("Người nhận");

                columns.AddFor(m => m.StatusID).Caption("Trạng thái").Visible(false);

                columns.AddFor(m => m.ReceivedConfirm).Caption("Xác nhận").SetCellValue(string.Format("function(newData, value, currentRowData) {{ SetConfirmationValue(newData, value, currentRowData,{0}); }}", new JS("data.ReceiveDept")));// "SetConfirmationValue");

                columns.AddFor(m => m.ReceivedConfirmStaff).Caption("Người xác nhận").AllowEditing(false).Visible(false);

                columns.AddFor(m => m.Deleted).Visible(false);
            })
            .Editing(e => e
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
                .Mode(GridEditMode.Popup)
            )
            .OnInitNewRow(string.Format("function(e) {{ OnInitDetailRow(e, {0}); }}", new JS("data.ID")))
        )
        </text>);
    })
)

@Html.Partial("~/Views/Shared/Component/_ImportErrorList.cshtml")

<input id="File2" type="file" name="file" class="hide" onchange="ChoiceFilePhu()" />

<div id="PopupPanel">

    <div>
        <table class="table table-advance">
            <tr>
                <td>Order:</td>
                <td>
                    @(Html.DevExtreme().TextBox()
                    .ID("txtOrder")
                    .Placeholder("Số order...")
                    .OnFocusIn("StartInputOrder")
                    .OnValueChanged("InputOrder")
                    )
                </td>
            </tr>
            <tr>
                <td>Tên chi tiết:</td>
                <td>
                    @(Html.DevExtreme().TextBox()
                    .ID("txtTenChiTiet")
                    .Placeholder("Tên chi tiết...")
                    .ReadOnly(true)
                    )
                </td>
            </tr>
            <tr>
                <td>Số lượng:</td>
                <td>
                    @(Html.DevExtreme().TextBox()
                    .ID("txtSlg")
                    .Placeholder("Số lượng...")
                    )
                </td>
            </tr>
            <tr>
                <td>Vi trí</td>
                <td>
                    @(Html.DevExtreme().Lookup()
                        .DataSource(ds => ds.WebApi()
                            .RouteName("C242_TrackingViTriApi")
                            .LoadAction("Get")
                            .Key("GiaCode")
                        )
                        .ID("Vitri")
                        .DisplayExpr("GiaCode")
                        .ValueExpr("GiaCode")
                    )
                </td>
            </tr>
            <tr>
                <td>Người nhận</td>
                <td>
                    @(Html.DevExtreme().TextBox()
                    .ID("txtNguoiNhan")
                    .Placeholder("Người nhận...")
                    )
                </td>
            </tr>
            <tr>
                <td>Ghi chú:</td>
                <td>
                    @(Html.DevExtreme().TextBox()
                    .ID("txtGhiChu")
                    .Placeholder("Ghi chú...")
                    )
                </td>
            </tr>
        </table>
        <input class="btn VP" style="margin-top: 10px;" type="Button" tabindex="" id="InputTrackingManual" name="" value="Nhập" onclick="InputTrackingManual()">
    </div>
</div>

<div id="background-popup">

</div>

<div class="PopupPanel hide"></div>

<script>
    var popupStatus_Temp = 0;
    $(document).ready(function () {
        /** các hàm dùng chug cho popup**/
        $(this).keydown(function (event) {
            if (event.which == 27) {
                disablePopup();
            }
        });

        $("#background-popup").click(function () {
            disablePopup();
        });

        function loadBackgroundToPopup() {
            $("#background-popup").css("opacity", "0.2");
            $("#background-popup").fadeIn(200);
        }

        function disablePopup() {
            if (popupStatus_Temp >= 1) {
                $("#background-popup").fadeOut(200);
                $("#PopupPanel").fadeOut(200);
                popupStatus_Temp = 0;
            }
        }

        /** load các popup của các phần **/
        function loadPopupPanel() {
            if (popupStatus_Temp == 0) {
                $("#PopupPanel").fadeIn(200);
                loadBackgroundToPopup();
                popupStatus_Temp = 1;
            }
        }

        $(".PopupPanel").click(function () {
            loadPopupPanel();
        });
    })
</script>

<script>
    function InputOrder(e, value)
    {
        e.OrderNumber = value;
        @* $.ajax({
            url: '@Url.Action("GetDataOfOrder", "AllDept")',
            headers: {
                'Authorization': 'Basic xxxxxxxxxxxxx',
                'X-CSRF-TOKEN': 'xxxxxxxxxxxxxxxxxxxx',
                'Content-Type': 'application/json'
            },
            dataType: 'Json',
            type: 'POST',
            data: { 'staffID': value, 'date': a },
            async: false,
            success: function (data) {
                if (data.Status != "OK") {
                    alert(data);
                    return;
                }

            },
        });*@

        //$('#dxInventoryReceivedDetail').dxDataGrid("instance").insertRow();
    }

    function OnInitRow(e) {
        e.data.ID = 0;
        e.data.Import = true;
        e.data.Date = new Date();
        e.data.StaffID = '@Session["StaffID"]';
    }

    function SetConfirmationValue(newData, value, currentRowData, revDept) {
        var userDept = '@Session["Department"]';
        if (userDept != revDept)
        {
            alert("Chỉ có nhân viên thuộc bộ phận " + revDept + " mới có thể xác thực giao nhận này.");
            return;
        }

        newData.ReceivedConfirm = value;
        newData.ReceivedConfirmStaff = '@Session["StaffID"]';
    }

    function OnInitDetailRow(e,parentID) {
        e.data.ID = 0;
        e.data.Qty = 0;
        e.data.Price = 0;
        e.data.StatusID = 0;
        e.data.VoucherID = parentID;
    }

    function SearchByPartNo() {
        $("#dxInventoryReceived").dxDataGrid("instance").refresh();
    }

    function GetPartNoForSearch() {
        var partNo = $("#txtPartNo").dxTextBox("instance").option("value");
        return partNo;
    }

    $(document).on('click', '#btnTracking', function () {
        $('#File2').trigger('click');
    });

    function ShowAddNewPopup() {
        $(".PopupPanel").trigger("click");
    }

    function ChoiceFilePhu() {
        var fromDept = $("#fromDept").dxLookup("instance").option("value");
        var toDept = $("#toDept").dxLookup("instance").option("value");
        var file = $('#File2').get(0);
        var alo = file.files;
        var form = new FormData();
        form.append(alo[0].name, alo[0]);
        form.append('fromDept', fromDept);
        form.append('toDept', toDept);
        form.append('staffID', '@Session["StaffID"].ToString()');
        $.ajax({
            url: '@Url.Action("ImportGiaoNhan", "AllDept")',
            type: "POST",
            contentType: false,
            processData: false,
            data: form,
            success: function (data) {
                alert(data.Values);
                if (data.Status != "OK") {
                    return;
                }

                if (data.Errors.length > 0) {
                    DisplayImportError(data.Errors);
                }

                $('#File2').val('');
                SearchByPartNo();
            },
        });
    }

    function StartInputOrder() {
        var order = $("#txtOrder").dxTextBox("instance");
        var myInput = order.element().find('input');
        myInput.select();
    }

    function InputOrder() {
        var order = $("#txtOrder").dxTextBox("instance").option("value");
        var item = order.split(',');
        if (item.length == 4) {
            order = item[1].split(':')[1];
            partID = item[0].split(':')[1];
            slg = item[2].split(':')[1];
            $("#txtOrder").dxTextBox("instance").option("value", order);
            $("#txtTenChiTiet").dxTextBox("instance").option("value", partID);
            $("#txtSlg").dxTextBox("instance").option("value", slg);
            return;
        }

        $.ajax({
            url: '@Url.Action("GetOrderInformation", "Tool")',
            type: "GET", //JSON
            dataType: "json",
            cache: false,
            data: { 'order': order },
            success: function (data) {
                if (data.Status != "OK") {
                    alert(data.Values);
                    return;
                }

                $("#txtOrder").dxLookup("instance").option("value", data.Values.BOderNo);
                $("#txtTenChiTiet").dxLookup("instance").option("value", data.Values.PartID);
                $("#txtSlg").dxLookup("instance").option("value", data.Values.Qty);
            }
        });
    }

    function InputTrackingManual() {
        var fromDept = $("#fromDept").dxLookup("instance").option("value");
        var toDept = $("#toDept").dxLookup("instance").option("value");
        var order = $("#txtOrder").dxLookup("instance").option("value");
        var partID = $("#txtTenChiTiet").dxLookup("instance").option("value");
        var slg = $("#txtSlg").dxLookup("instance").option("value");
        var vitri = $("#Vitri").dxLookup("instance").option("value");
        var ghichu = $("#txtGhiChu").dxLookup("instance").option("value");
        var ngNhan = $("#txtNguoiNhan").dxLookup("instance").option("value");

        $.ajax({
            url: '@Url.Action("InputTrackingManual", "Tool")',
            type: "POST", //JSON
            dataType: "json",
            cache: false,
            data: { 'fromDept': fromDept, 'toDept': toDept, 'order': order, 'partID': partID, 'slg': slg, 'vitri': vitri, 'ghichu': ghichu, 'ngNhan': ngNhan },
            success: function (data) {
                if (data.Status != "OK") {
                    alert(data.Values);
                    return;
                }

                //alert("Đã nhập xong!");
                $("#txtOrder").dxLookup("instance").option("value", '');
                $("#txtTenChiTiet").dxLookup("instance").option("value", '');
                $("#txtSlg").dxLookup("instance").option("value", '');
            }
        });
    }
</script>