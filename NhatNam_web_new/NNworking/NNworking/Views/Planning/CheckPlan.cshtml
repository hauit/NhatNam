
@{
    ViewBag.Title = "Kiểm tra, phê duyệt kế hoạch";
}

<div class="box box-body">
    <div class="col-lg-12">
        <table>
            <tr>
                <td style="padding-left: 10px;width: 100px;">
                    Từ Ngày:
                </td>
                <td style="padding-left: 10px;">
                    @(Html.DevExtreme().DateBox()
                                .Value(DateTime.Now)
                                .ID("dateFromDate")
                    )
                </td>
                <td style="padding-left: 10px;">
                    @(Html.DevExtreme().Button()
                                .Text("Phê duyệt")
                                .ID("btnPlanCheck")
                                .Type(ButtonType.Normal)
                                .Width(90)
                                .OnClick("DataOK")
                    )
                </td>
            </tr>
            <tr>
                <td style="padding-left: 10px;width: 100px;">
                    Đến Ngày:
                </td>
                <td style="padding-left: 10px;">
                    @(Html.DevExtreme().DateBox()
                                .Value(DateTime.Now)
                                .ID("dateToDate")
                    )
                </td>
                <td style="padding-left: 10px;">
                </td>
            </tr>
        </table>
    </div>
    <input id="File1" type="file" name="file" class="hide" onchange="ChoiceFile()" />
    <div class="col-lg-12">

        @(Html.DevExtreme().DataGrid<NNworking.Models.C242_MachinePlanning>()
                .DataSource(ds => ds.WebApi()
                    .RouteName("C242_MachinePlanningApi")
                    .LoadAction("GetForShift")
                    .LoadParams(new { shift = new JS("getShift"), fromDate = new JS("getFromDateValue"), toDate = new JS("getToDateValue") })
                    .Key("ID")
                )
                .ID("dxDataGrid")
                .Paging(page => page.PageSize(20))
                    .Pager(pager => pager.ShowPageSizeSelector(true)
                        .ShowInfo(true)
                        .AllowedPageSizes(new List<int> { 20, 30, 50, 100, 200 })
                    )
                    .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
                        .DescendingText("MayGC")
                    )
                    .ColumnAutoWidth(true)
                    .FilterRow(fil => fil.Visible(true))
                    .FilterPanel(fi => fi.Visible(true))
                    .SearchPanel(search => search.Visible(true)
                        .HighlightSearchText(true)
                    )
                    //.HeaderFilter(headFil => headFil.Visible(true))
                    .ShowColumnHeaders(true)
                    .ShowRowLines(true)
                    .RemoteOperations(true)
                .Columns(columns =>
                {

                    columns.AddFor(m => m.ID).Visible(false).AllowEditing(false);

                    columns.AddFor(m => m.Order).Visible(true).AllowEditing(false).CellTemplate(new JS("LinkToToLenh"));

                    columns.AddFor(m => m.NC).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.MayGC).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.Slglenh).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.BatDau).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.KetThuc).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.TGGC).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.TGGL).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.TenChiTiet).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.K).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.Date).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.Shift).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.ThoiHan).Visible(false).AllowEditing(false);

                    columns.AddFor(m => m.TinhTrang).Visible(false).AllowEditing(false);

                    columns.AddFor(m => m.DKmay).Visible(true).AllowEditing(false);

                    columns.AddFor(m => m.TTNC).Visible(true).AllowEditing(false);
                })
        )
    </div>
    <script>
    function LinkToToLenh(container, options) {
        var order = options.data.Order;
        var id = options.data.ID;
        var grid = $("dxDataGrid").dxDataGrid("instance");
        $('<div id="dxButton_LinkToToLenh_' + id + '" /><a href="#" onclick ="OpentoLenh(\'' + order + '\')">' + order + '</a></div>').appendTo(container);

    }

    function OpentoLenh(order) {
        var win = window.open('Planning/ToLenh?Order=' + order, order);
    }

    function DataOK() {
        var fromDate = getFromDateValue();
        var toDate = getToDateValue();
        $.ajax({
            url: '@Url.Action("PlanOK", "Planning")',
            dataType: 'Json',
            type: "POST",
            data: { 'fromDate': fromDate, 'toDate': toDate },
            cache: false,
            success: function (data) {
                if (data.Status != "OK") {
                    alert(data.Values);
                    return;
                }
                
            },
        });
        $("#dxDataGrid").dxDataGrid("instance").refresh();
    }

    function getShift() {
        var a = '';
        return a;
    }

    function getFromDateValue() {
        var a = $("#dateFromDate").dxDateBox("instance").option("value");
        return a;
    }

    function getToDateValue() {
        var a = $("#dateToDate").dxDateBox("instance").option("value");
        return a;
    }
    </script>

