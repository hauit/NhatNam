@{
    ViewBag.Title = "Quản lý thông tin nhân viên";
}
<!-- Content Wrapper. Contains page content -->
    <!-- Main content -->
    <section class="content">
        @(Html.DevExtreme().DataGrid<NNworking.Models.C222_Staff>()
            .DataSource(ds => ds.WebApi()
                .RouteName("C222_StaffApi")
                .LoadAction("Get")
                .InsertAction("Post")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("StaffID")
            )
            .ID("gridView")
            .OnContextMenuPreparing("contextMenu")
            .Selection(select => select.Mode(SelectionMode.Multiple))
            .Paging(page => page.PageSize(15))
            .Pager(pager => pager.ShowPageSizeSelector(true)
                .ShowInfo(true)
                .AllowedPageSizes(new List<int> { 15, 30, 50 })
            )
            .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
                .DescendingText("StaffID")
            )
            .FilterRow(fil => fil.Visible(true))
            .FilterPanel(fi => fi.Visible(true))
            .SearchPanel(search => search.Visible(true)
                .HighlightSearchText(true)
                .Width(500)
            )
            .HeaderFilter(headFil => headFil.Visible(true))
            .ShowColumnHeaders(true)
            .ShowRowLines(true)
            .Export(exp => exp.Enabled(true)
                .FileName("Exported data")
                .AllowExportSelectedData(true)
            )
            .RemoteOperations(true)
            .Columns(columns => {

                columns.AddFor(m => m.StaffID);

                columns.AddFor(m => m.StaffName);

                columns.AddFor(m => m.SecID);

                columns.AddFor(m => m.GroupID);

                columns.AddFor(m => m.Sub_Group);

                columns.AddFor(m => m.Email);

                columns.AddFor(m => m.EmailHC);

                columns.AddFor(m => m.ngduyet);

                columns.AddFor(m => m.ngduyet2);

                columns.AddFor(m => m.ngduyet3);

                columns.AddFor(m => m.BusStation);

                columns.AddFor(m => m.level);

                columns.AddFor(m => m.Status);

                columns.AddFor(m => m.StopDate);
            })
            .Editing(e => e
                //.AllowAdding(true)
                //.AllowUpdating(true)
                //.AllowDeleting(true)
                .Mode(GridEditMode.Popup)
            )
        )
    </section>
    <!-- /.content -->
<!-- /.content-wrapper -->
@section Scripts
{
    @Scripts.Render("~/bundles/dashboard1")
}
<script>      
    function contextMenu(e) {
        if (e.row.rowType === "data") {
            e.items = [{
                text: "edit",
                onItemClick: function () {
                    $("#gridView").dxDataGrid("instance").editRow(e.row.rowIndex);
                }
            },
            {
                text: "insert",
                onItemClick: function () {
                    $("#gridView").dxDataGrid("instance").insertRow();
                }
            },
            {
                text: "delete",
                onItemClick: function () {
                    alert(e.row.rowIndex);
                    return;
                    $("#gridView").dxDataGrid("instance").removeRow(e.row.rowIndex);
                }
            },
            {
                text: "Refresh",
                onItemClick: function () {
                    $("#gridView").dxDataGrid("instance").refresh();
                }
            }];
        }
    }
</script>