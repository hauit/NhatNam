

@{

    ViewBag.Title = "WTS bộ phận gián tiếp";
    int a = 0;
    int ovt = 0;
}

@*@using (Html.BeginForm("Index", "Business", FormMethod.Post, new { name = "BusinessSearch", id = "BusinessSearch" }))
    {
            <span> Ngày(dd/MM/yyyy):</span> @Html.TextBox("date")
            <span>Nhân viên:</span> @Html.DropDownList("StaffID", String.Empty)
            <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
            <input id="Search" type="button" value="Tìm kiếm" onclick="GetHistoryOtherStaff()"/>
    }*@

<table class="table table-advance">
    <tr>
        <td>
        </td>
        <td>
            <input class="btn VP" style="margin-top: 10px;" type="Button" tabindex="" id="ShiftBT" name="" value="Ca">
        </td>
        <td>
            <h1 id="clock" style=""><time>00:00:00</time></h1>
        </td>
        <td>
            <h1 id="HW" name="HW"> WorkID</h1>
        </td>
        <td></td>
        <td></td>
    </tr>
    <tr>
        <td>
            @*@{
                if (Session["SecID"].ToString() == "0254")
                {*@
            <span>Ghi chú:</span> <input type="text" size="15" id="Note" />
            @*}
                }*@
        </td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
</table>
<div onclick="songsong()" style="width: 200px;">
    <span id="songsong"> Thêm giờ:</span> <input type="checkbox" id="checkTime" value="check1" onclick="songsong()" />
    <script>
        function songsong() {
            var a = $("#checkTime").is(":checked");
            if (a == true) {
                $("#checkTime").prop("checked", false);
            }
            else {
                $("#checkTime").prop("checked", true);
            }
        }
    </script>
</div>

<div id="WorkIDList"></div>

<div id="ShiftButton">
    <input class="btn btn-green" style="margin-top: 10px;" type="Button" tabindex="" id="Shift" name="" value="Ca 1" onclick="ShiftValue('T1')">
    <input class="btn btn-green" style="margin-top: 10px;" type="Button" tabindex="" id="Shift" name="" value="Ca 2" onclick="ShiftValue('T2')">
    <input class="btn btn-green" style="margin-top: 10px;" type="Button" tabindex="" id="Shift" name="" value="Ca 3" onclick="ShiftValue('T3')">
    <input class="btn btn-green" style="margin-top: 10px;" type="Button" tabindex="" id="Shift" name="" value="Ca ngày" onclick="ShiftValue('T1')">
    <input class="btn btn-green" style="margin-top: 10px;" type="Button" tabindex="" id="Shift" name="" value="Ca đêm" onclick="ShiftValue('T2')">
    <input class="btn btn-green" style="margin-top: 10px;" type="Button" tabindex="" id="Shift" name="" value="Ca HC" onclick="ShiftValue('T0')">
</div>


@(Html.DevExtreme().DataGrid<NNworking.Models.C242_WTS>()
        .DataSource(ds => ds.WebApi()
            .RouteName("C242_WTSApi")
            .LoadAction("GetDetailWTSGT")
            .LoadParams(new { shift = new JS("getShiftValue"), staffID = new JS("getStaffID"), date = DateTime.Now })
            .UpdateAction("Put").UpdateMethod("Put")
            .DeleteAction("Delete")
            .Key("ID")
        )
        .ID("dxDataGrid")
        .Paging(page => page.PageSize(15))
        .Pager(pager => pager.ShowPageSizeSelector(true)
            .ShowInfo(true)
            .AllowedPageSizes(new List<int> { 15, 30, 50 })
        )
        .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
            .DescendingText("StaffID")
        )
        .FilterRow(fil => fil.Visible(true))
        .FilterPanel(fi => fi.Visible(true))
        .SearchPanel(search => search.Visible(true)
            .HighlightSearchText(true)
            .Width(500)
        )
        .ShowColumnHeaders(true)
        .ShowRowLines(true)
        .Columns(columns =>
        {

            columns.AddFor(m => m.ID).AllowEditing(false);

            columns.AddFor(m => m.Date);

            columns.AddFor(m => m.Shift).AllowEditing(false);

            columns.AddFor(m => m.OptionID).AllowEditing(false);

            columns.AddFor(m => m.MONo).AllowEditing(false);

            columns.AddFor(m => m.WorkID).AllowEditing(false);

            columns.AddFor(m => m.StaffID).AllowEditing(false);

            columns.AddFor(m => m.Time);

            columns.AddFor(m => m.Note);

            columns.AddFor(m => m.Status).AllowEditing(false).Caption("Đã duyệt");
        })
        .Editing(e => e
            .AllowUpdating(true)
            .AllowDeleting(true)
            .Mode(GridEditMode.Row)
        )
        .OnRowPrepared("OnRowPrepared")
//.OnContentReady("OnRowPrepared")
//.OnRowValidating("ValidateRow")
)

<div id="ListHistory">
    Tổng thời gian: 0 <br />
    Thời gian thêm giờ: 0
</div>

<script>
    var Shift = '';
    var desWorkID = '';
    var workType = '';
    var datasource = new Array();
    var IssueList = new Array();
    var popupStatus = 0;
    function ShiftValue(data) {
        Shift = data;
        $("#ShiftButton").append("<br/>" + Shift);
    }

    $("#BusinessSearch").ready(function () {
        if ("@System.Web.HttpContext.Current.Session["Level"].ToString()" >= 2) {

        }
        else {
            $("#BusinessSearch").hide();
        }
    })

    function getShiftValue() {
        return Shift;
    }

    function getStaffID() {
        return '@Session["StaffID"].ToString().Trim()';
    }

    var totalTime = 0;
    var totalOvertime = 0;
    function OnRowPrepared(e) {
        if (e.rowType == "header") {
            caledID = new Array();
        }

        if (e.rowType == "data") {
            for (var i = 0; i < caledID.length; i++) {
                if (caledID[i] != e.data.ID) {
                    continue;
                }

                return;
            }
            caledID.push(e.data.ID);
            totalTime += e.data.Time;
            if (e.data.Overtime) {
                totalOvertime += e.data.Time;
            }
        }
        
        DisplayTotalTime();
    }

    function DisplayTotalTime() {
        var ListHistory = '';
        ListHistory += 'Tổng thời gian là: ' + totalTime + '</br>';
        ListHistory += 'Thời gian thêm giờ: ' + totalOvertime;
        $("#ListHistory").html(ListHistory);
    }
</script>

<script>
    $(document).ready(function () {
        function disablePopup() {
            if (popupStatus == 1) {
                $("#ShiftButton").fadeOut(200);
                $("#background-popup").fadeOut(200);
                popupStatus = 0;
            }
        }

        $("#background-popup").click(function () {
            disablePopup();
        });

        function loadBackgroundToPopup() {
            $("#background-popup").css("opacity", "0.2");
            $("#background-popup").fadeIn(200);
        }

        /** load các popup của các phần **/
        function loadShiftPopup() {
            if (popupStatus == 0) {
                $("#ShiftButton").fadeIn(200);
                loadBackgroundToPopup();
                popupStatus = 1;
            }
        }

        /** các hàm gọi sự kiện click **/
        $("#ShiftBT").click(function () {
            loadShiftPopup();
        });
        
    })

</script>


<script>
    $.ajax({
        url: '@Url.Action("List_WorkIDGT", "WTS")',
        dataType: 'Json',
        type: 'GET',
        data: { 'dept': '@Session["Department"].ToString()' },
        cache: false,
        success: function (data) {
            listWorkID = data;
            var ListWork = '';
            ListWork1 = '<table id="ListWorkID" style="width: 1200px;"> ';
            ListWork1 += "<tr>";
            var Recordnum = 0;
            $.each(data, function (i, val) {
                if (i % 5 == 0) {
                    ListWork1 += "</tr>";
                    ListWork1 += "<tr>";
                }
                ListWork1 += '<td>';
                ListWork1 += '<div style= "float:left; width: 110px;">';
                if (val.TT_GT == true) {
                    ListWork1 += '<input class="btn VP GT" style="margin-top: 10px;width:70px;" type="Button" tabindex="' + i + '" id="' + val.WorkID + i + '" name="' + val.WorkID + i + '"  value="' + val.WorkID + '" onclick = "WorkIDClick(\'' + val.WorkID + '\')">';
                }
                else {
                    ListWork1 += '<input class="btn VP" style="margin-top: 10px;width:70px;" type="Button" tabindex="' + i + '" id="' + val.WorkID + i + '" name="' + val.WorkID + i + '"  value="' + val.WorkID + '" onclick = "WorkIDClick(\'' + val.WorkID + '\')">';
                }

                ListWork1 += '</div>';
                ListWork1 += '<div style= "float:left; width: 105px;">';
                ListWork1 += val.WorkName;
                ListWork1 += '</div>';
                ListWork1 += '</td>';
                Recordnum++;
            });
            if (Recordnum % 5 == 0) {
                ListWork1 += "</tr>";
                ListWork1 += "<tr>";
            }
            ListWork1 += '<td>';
            ListWork1 += '<input class="btn VP" style="margin-top: 10px;width:70px;" type="Button" tabindex="" id="End" name="End"  value="End" onclick = "WorkIDClick(\'End\')">';
            ListWork1 += '</td>';
            ListWork1 += '</table>';
            $("#WorkIDList").html(ListWork1);
        },
    });

    function WorkIDClick(WorkID) {
        GetElement(WorkID);
    }

    function GetElement(WorkID) {
        PostData(WorkID);
    }

    function PostData(WorkID) {
        var OverTime = $("#checkTime").is(":checked");
        $.ajax({
            url: "@Url.Action("InputWTSGT", "WTS")",
            type: "POST",
        data: {
            'workID': WorkID, 'ovt': OverTime, 'shift': Shift
        }, //JSON
        dataType: "json",
        cache: false,
        success: function (data) {
            if (data != "") {
                WorkDL = WorkID;
                $("#HW").html(WorkDL);
                seconds = 0;
                minutes = 0;
                hours = 0;
                GetHistory();
            }
        }
    })
    }

    //GetHistory();
    function GetHistory() {
        $("#dxDataGrid").dxDataGrid("instance").refresh();
        @*$.ajax({
            url: '@Url.Action("GetHistory", "Business")',
            type: "GET",
            data: '',
            dataType: 'Json',
            cache: false,
            success: function (data) {
                var totaltime = 0;
                var ovtime = 0;
                $.each(data, function (i, val) {
                    totaltime += val.time;
                    if (val.Overtime == true) {
                        ovtime += val.time;
                    }
                })
                var ListHistory = '';
                ListHistory += 'Tổng thời gian là: ' + totaltime + '</br>';
                ListHistory += 'Thời gian thêm giờ: ' + ovtime;
                $("#ListHistory").html(ListHistory);
            }
        });*@
    }
</script>

<script>
        var h1 = document.getElementById('clock'),
        start = document.getElementById('start'),
        stop = document.getElementById('stop'),
        clear = document.getElementById('clear'),
        seconds = 0, minutes = 0, hours = 0,
        t;

        function add() {
            seconds++;
            if (seconds >= 60) {
                seconds = 0;
                minutes++;
                if (minutes >= 60) {
                    minutes = 0;
                    hours++;
                }
            }

            h1.textContent = (hours ? (hours > 9 ? hours : "0" + hours) : "00") + ":" + (minutes ? (minutes > 9 ? minutes : "0" + minutes) : "00") + ":" + (seconds > 9 ? seconds : "0" + seconds);

            timer();
        }
        function timer() {
            t = setTimeout(add, 1000);
        }
        timer();


        /* Start button */
        start.onclick = function () {
            t = setTimeout(add, 1000);
        }

        /* Stop button */
        stop.onclick = function () {
            clearTimeout(t);
        }

        /* Clear button */
        function clear() {
            h1.textContent = "00:00:00";
            seconds = 0; minutes = 0; hours = 0;
        }
</script>