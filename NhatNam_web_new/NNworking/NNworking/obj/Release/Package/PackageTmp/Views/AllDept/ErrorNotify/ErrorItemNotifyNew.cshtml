
@{
    ViewBag.Title = "Nhập nội dung báo lỗi";
}

<div class="box box-body">
    <table width="1000px">
        <tr>
            <td>
                &nbsp;
                @(Html.DevExtreme().Button()
                    .Text("Import báo lỗi")
                    .ID("btnErrorNotify")
                    .Type(ButtonType.Normal)
                    .Width(250)
                )
            </td>
        </tr>
    </table>
</div>

<div id="background-popup"></div>
<div id="NotifyDiv">
</div>
<input id="File2" type="file" name="file" class="hide" onchange="ChoiceFilePhu()" />

<script>
    var popupStatus = 0;
    function disablePopup() {
        if (popupStatus == 1) {
            $("#NotifyDiv").fadeOut(200);
            $("#background-popup").fadeOut(200);
            popupStatus = 0;
        }
    }

    $("#background-popup").click(function () {
        disablePopup();
    });

    function loadBackgroundToPopup() {
        $("#background-popup").css("opacity", "0.2");
        $("#background-popup").fadeIn(200);
    }

    /** load các popup của các phần **/
    function loadListNoPopup() {
        if (popupStatus == 0) {
            $("#NotifyDiv").fadeIn(200);
            loadBackgroundToPopup();
            popupStatus = 1;
        }
    }

    $(document).on('click', '#btnErrorNotify', function () {
        $('#File2').trigger('click');
    });

    function ChoiceFilePhu() {
        var file = $('#File2').get(0);
        var alo = file.files;
        var form = new FormData();
        form.append(alo[0].name, alo[0]);
        form.append('staffID', '@Session["StaffID"].ToString()');
        $.ajax({
            url: '@Url.Action("ImportBaoLoi_New", "AllDept")',
            type: "POST",
            contentType: false,
            processData: false,
            data: form,
            success: function (data) {
                alert(data.Values);
                if (data.Status != "OK") {
                    return;
                }

                if (data.Errors.length > 0)
                {
                    var html = '';
                    html += '<table class="table">                      ';
                    html += '    <tbody>                                ';
                    html += '        <tr>                               ';
                    html += '            <th>Dòng</th>                  ';
                    html += '            <th>Trạng thái</th>            ';
                    html += '            <th>Nội dung</th>              ';
                    html += '        </tr>                              ';
                    html += '    </tbody>                               ';
                    html += '    <tbody id="ThongBaoOrderNoLoi_body">   ';
                    $.each(data.Errors, function (i, val) {
                        html += '        <tr>                           ';
                        html += '            <td>' + val.Line + '</td>  ';
                        html += '            <td>' + val.Status + '</td>';
                        html += '            <td>' + val.Des + '</td>   ';
                        html += '        </tr>                          ';
                    });
                    html += '    </tbody>                               ';
                    html += '</table>                                   ';
                    $("#NotifyDiv").html(html);
                    loadListNoPopup();
                }

                $('#File2').val('');
            },
        });
    }
</script>

@(Html.DevExtreme().DataGrid<NNworking.Models.C242_ErrorItemNotify_View>()
    .DataSource(ds => ds.WebApi()
        .RouteName("C242_ErrorItemNotify_NewApi")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .OnBeforeSend("UpdateExpandData")
        .Key("ID")
    )
    .ID("dxDataGridBaoLoi")
    .Paging(page => page.PageSize(10))
    .Pager(pager => pager.ShowPageSizeSelector(true)
        .ShowInfo(true)
        .AllowedPageSizes(new List<int> { 10, 20, 30, 50, 100, 200 })
    )
    .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
        .DescendingText("DateWrite")
    )
    //.Export(e => e.Enabled(true).FileName("BaoLoiSP").AllowExportSelectedData(true))
    .ColumnAutoWidth(true)
    .FilterRow(fil => fil.Visible(true))
    .FilterPanel(fi => fi.Visible(true))
    .SearchPanel(search => search.Visible(true)
        .HighlightSearchText(true)
        .Width(500)
    )
    .Columns(columns =>
    {

        columns.AddFor(m => m.ID).AllowEditing(false).Caption("Mã giấy báo lỗi");

        columns.AddFor(m => m.ErrorNo).Caption("Mã giấy báo lỗi").Visible(false);//1

        columns.AddFor(m => m.DateRaiseErr).Caption("Ngày gây lỗi").ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.DateWrite).Caption("Ngày viết giấy").ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.Deadline).Caption("Thời hạn hoàn thành").AllowEditing(false);//1

        columns.AddFor(m => m.NotifyDept).Caption("Bộ phận TB").Lookup(lup =>
                                    lup.DataSource(ds => ds.WebApi()
                                        .RouteName("C222_DepartmentApi")
                                        .LoadAction("Get")
                                    )
                                    .DisplayExpr("DeptName")
                                    .ValueExpr("DeptCode")
                                ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.RaiseErrorDept).Caption("Bộ phận gây lỗi").Lookup(lup =>
                                    lup.DataSource(ds => ds.WebApi()
                                        .RouteName("C222_DepartmentApi")
                                        .LoadAction("Get")
                                    )
                                    .DisplayExpr("DeptName")
                                    .ValueExpr("DeptCode")
                                ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.Supplier).Caption("Nhà cung cấp").Lookup(lup =>
                                    lup.DataSource(ds => ds.WebApi()
                                        .RouteName("C222_PartnerApi")
                                        .LoadAction("GetAllPartner")
                                    )
                                    .DisplayExpr("Name")
                                    .ValueExpr("Code")
                                ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.NotifyStaff).Caption("Nhân viên TB").ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.RaiseErrorStaff).Caption("Nhân viên gây lỗi").ValidationRules(val => val.AddRequired());//2

        columns.AddFor(m => m.Customer).Caption("Khách hàng").Lookup(lup =>
                            lup.DataSource(ds => ds.WebApi()
                                .RouteName("C222_PartnerApi")
                                .LoadAction("GetAllPartner")
                            )
                            .DisplayExpr("Name")
                            .ValueExpr("Code")
                        ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.ErrorType).Caption("Kiểu lỗi").Lookup(lup =>
                            lup.DataSource(ds => ds.WebApi()
                                .RouteName("C242_ErrorTypeApi")
                                .LoadAction("Get")
                                .Key("ID")
                            )
                            .DisplayExpr("ErrorType")
                            .ValueExpr("ID")
                    ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.ErrorType1).Caption("Kiểu lỗi2").Lookup(lup =>
                            lup.DataSource(ds => ds.WebApi()
                                .RouteName("C242_ErrorTypeApi")
                                .LoadAction("Get")
                                .Key("ID")
                            )
                            .DisplayExpr("ErrorType")
                            .ValueExpr("ID")
                    ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.ErrorType2).Caption("Kiểu lỗi3").Lookup(lup =>
                            lup.DataSource(ds => ds.WebApi()
                                .RouteName("C242_ErrorTypeApi")
                                .LoadAction("Get")
                                .Key("ID")
                            )
                            .DisplayExpr("ErrorType")
                            .ValueExpr("ID")
                    ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.OrderNo).Caption("Số order").SetCellValue("GetOrderInfor").ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.PartID).Caption("Tên chi tiết").ValidationRules(val => val.AddRequired());//1


        columns.AddFor(m => m.Qty).Caption("Số lương lệnh").ValidationRules(val => val.AddRequired());//1

        //columns.AddFor(m => m.OptionID).Caption("Nguyên công").Lookup(lup =>
        //                lup.DataSource(ds => ds.WebApi()
        //                    .RouteName("C242_OptionApi")
        //                    .LoadAction("Get")
        //                    .Key("ID")
        //                )
        //                .DisplayExpr("OptionID")
        //                .ValueExpr("OptionID")
        //            ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.ErrorQty).Caption("Số lượng lỗi").ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.ErrorDes).Caption("Mô tả nội dung lỗi").ValidationRules(val => val.AddRequired());//1

        //columns.AddFor(m => m.DecisionToFine).Caption("Quyết định xử phạt").Visible(false).AllowEditing(false);//2

        //columns.AddFor(m => m.NotPenalizeDes).Caption("Lý do không xử phạt").Visible(false).AllowEditing(false);//2

        //columns.AddFor(m => m.ErrorProcess).Caption("Cách xử lý").Visible(false).AllowEditing(false);//2

        //columns.AddFor(m => m.ErrorCause).Caption("Nguyên nhân gây lỗi").Visible(false).AllowEditing(false);//2

        //columns.AddFor(m => m.Remedies).Caption("Biện pháp khắc phục").Visible(false).AllowEditing(false);//2

        //columns.AddFor(m => m.ManagerRemedies).Caption("Biện pháp khắc phục của quản lý").Visible(false).AllowEditing(false);//2

        columns.AddFor(m => m.ErrorContent).Caption("Nội dung lỗi").Lookup(lup =>
                        lup.DataSource(ds => ds.WebApi()
                            .RouteName("C242_ErrorContentApi")
                            .LoadAction("Get")
                            .Key("ID")
                        )
                        .DisplayExpr("ContentDes")
                        .ValueExpr("ContentIndex")
                    ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.DeceidedTime).Caption("Thời điểm phát hiện lỗi").Lookup(lup =>
                                    lup.DataSource(ds => ds.WebApi()
                                        .RouteName("C242_DeceidedTimeApi")
                                        .LoadAction("Get")
                                        .Key("ID")
                                    )
                                    .DisplayExpr("Des")
                                    .ValueExpr("DeceidedTimeIndex")
                                ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.PredictErrorCause).Caption("Nhận định nguyên nhân lỗi").Lookup(lup =>
                                    lup.DataSource(ds => ds.WebApi()
                                        .RouteName("C242_PredictErrorCauseApi")
                                        .LoadAction("Get")
                                        .Key("ID")
                                    )
                                    .DisplayExpr("Des")
                                    .ValueExpr("PredictErrorCauseIndex")
                                ).ValidationRules(val => val.AddRequired());//1

        columns.AddFor(m => m.ErrorHappenFrequency).Caption("Số lần phát hiện").Lookup(lup =>
                                    lup.DataSource(ds => ds.WebApi()
                                        .RouteName("C242_ErrorHappenFrequencyApi")
                                        .LoadAction("Get")
                                        .Key("ID")
                                    )
                                    .DisplayExpr("Des")
                                    .ValueExpr("FrequencyIndex")
                                ).ValidationRules(val => val.AddRequired());//1
    })
            .Editing(e => e
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
                .Mode(GridEditMode.Popup)
            )
            .OnInitNewRow("onInitNewRow")
            .OnRowUpdating("onRowUpdating")
//.OnContentReady("DockHeader")
)

<script>
    function onInitNewRow(e) {
        e.data.ID = 0;
        e.data.ErrorNo = '0';
    }

    function onRowUpdating(e) {
        e.newData.NotPenalizeDes = "inputUpdate";
    }

    function UpdateExpandData(type, data) {
        if (type != "delete" && type != "update") {
            return;
        }

        data.data.extraParam = '@Session["StaffID"].ToString()';
        //e.data.UpdateStaff = '@Session["StaffID"].ToString()';
    }

    function DockHeader(e) {
        var $header = $('#dxDataGridBaoLoi').find(".dx-datagrid-headers");
        $t_fixed = $header.clone();
        $t_fixed.addClass("fixed-headers").insertAfter($header);
        $t_fixed.width($('#gridContainer').width());
    }

    function GetOrderInfor(e, value, currentRowData) {
        e.OrderNo = value;
        $.ajax({
            url: '@Url.Action("GetBusOrderInfor", "AllDept")',
            dataType: 'Json',
            type: 'GET',
            data: { 'orderNo': value },
            async: false,
            success: function (data) {
                if (data.Status != "OK") {
                    alert(data.Values);
                    return;
                }

                e.Qty = data.Values.Qty;
                e.PartID = data.Values.PartID;
            },
        });
    }
</script>

@*@(Html.DevExtreme().DataGrid<NNworking.Models.C242_Option>()
        .DataSource(ds => ds.WebApi()
            .RouteName("C242_OptionApi")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("ID")
        )
        .RemoteOperations(true)
        .Columns(columns => {

            columns.AddFor(m => m.ID);

            columns.AddFor(m => m.DeptCode);

            columns.AddFor(m => m.OptionID);

            columns.AddFor(m => m.Note);

            columns.AddFor(m => m.InputTime);

            columns.AddFor(m => m.Deleted);
        })
        .Editing(e => e
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
        )
    )*@