
@{
    ViewBag.Title = "Xuất kho vật liệu";
}

<div class="col-lg-12">
    <table>
        <tr>
            <td style="padding-left: 10px;width: 100px;">
                Từ Ngày:
            </td>
            <td style="padding-left: 10px;">
                @(Html.DevExtreme().DateBox()
                        .Value(DateTime.Now)
                        .ID("dateFromDate")
                )
            </td>
            <td style="padding-left: 10px;">
                @(Html.DevExtreme().Button()
                        .Text("Xem")
                        .ID("btnView")
                        .Type(ButtonType.Normal)
                        .Width(90)
                        .OnClick("ViewData")
                )
            </td>
        </tr>
        <tr>
            <td style="padding-left: 10px;width: 100px;">
                Đến Ngày:
            </td>
            <td style="padding-left: 10px;">
                @(Html.DevExtreme().DateBox()
                        .Value(DateTime.Now)
                        .ID("dateToDate")
                )
            </td>
            <td style="padding-left: 10px;width: 100px;">
                @(Html.DevExtreme().Button()
                        .Text("Import")
                        .ID("btnImport")
                        .Type(ButtonType.Normal)
                        .Width(90)
                )
            </td>
        </tr>
    </table>
</div>

@(Html.DevExtreme().DataGrid<NNworking.Models.C222_MaterialStock_Output>()
            .DataSource(ds => ds.WebApi()
                .RouteName("C222_MaterialStock_OutputApi")
                .LoadAction("Get")
                .InsertAction("Post")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("ID")
            )
            .ID("dxDataGrid")
            .Paging(page => page.PageSize(10))
            .Pager(pager => pager.ShowPageSizeSelector(true)
                .ShowInfo(true)
                .AllowedPageSizes(new List<int> { 10, 20, 30, 50, 100, 200 })
            )
            .Sorting(sort => sort.Mode(GridSortingMode.Multiple)
                .DescendingText("ID")
            )
            //.Export(e => e.Enabled(true).FileName("BaoLoiSP").AllowExportSelectedData(true))
            .ColumnAutoWidth(true)
            .FilterRow(fil => fil.Visible(true))
            .FilterPanel(fi => fi.Visible(true))
            .SearchPanel(search => search.Visible(true)
                .HighlightSearchText(true)
                .Width(500)
            )
            .Columns(columns =>
            {

                columns.AddFor(m => m.ID).AllowEditing(false); ;

                columns.AddFor(m => m.Date);

                columns.AddFor(m => m.OrderNo);

                columns.AddFor(m => m.MaterialID).Lookup(lup =>
                    lup.DataSource(ds => ds.WebApi()
                        .RouteName("C222_MaterialStockApi")
                        .LoadAction("Get")
                        .Key("ID")
                    )
                    .DisplayExpr("MaterialID")
                    .ValueExpr("MaterialID")
                );

                columns.AddFor(m => m.MaterialConfiguration).Lookup(lup =>
                    lup.DataSource(ds => ds.WebApi()
                        .RouteName("C222_MaterialConfigurationApi")
                        .LoadAction("Get")
                        .Key("ID")
                    )
                    .DisplayExpr("MaterialConfiguration")
                    .ValueExpr("MaterialConfiguration")
                );

                columns.AddFor(m => m.Weight);

                columns.AddFor(m => m.Unit);

                columns.AddFor(m => m.BPYC).Lookup(lup =>
                    lup.DataSource(ds => ds.WebApi()
                        .RouteName("C222_DepartmentApi")
                        .LoadAction("Get")
                    )
                    .DisplayExpr("DeptName")
                    .ValueExpr("DeptCode")
                );

                columns.AddFor(m => m.Note);
            })
            .Editing(e => e
                .AllowAdding(true)
                .AllowUpdating(true)
                .AllowDeleting(true)
            )
            .OnInitNewRow("onInitNewRow")
)

<input id="File1" type="file" name="file" class="hide" onchange="ChoiceFile()" />

@Html.Partial("~/Views/Shared/Component/_ImportErrorList.cshtml")
<script>
    $(document).on('click', '#btnImport', function () {
        $('#File1').trigger('click');
    });

    function ChoiceFile() {
        var file = $('#File1').get(0);
        var alo = file.files;
        var form = new FormData();
        var date = getFromDateValue();
        form.append(alo[0].name, alo[0]);
        form.append('date', date);
        $.ajax({
            url: '@Url.Action("Import_MaterialStock_Output", "MaterialStock")',
            type: "POST",
            contentType: false,
            processData: false,
            data: form,
            success: function (data) {
                if (data.Errors.length > 0) {
                    DisplayImportError(data.Errors);
                }

                if (data.Status != "OK") {
                    alert(data.Values);
                    return;
                }

                alert(data.Status);
                ViewData();
                $('#File1').val('');
            },
        });
    }

    function onInitNewRow(e) {
        e.data.ID = 0;
    }

    function getFromDateValue() {
        var a = $("#dateFromDate").dxDateBox("instance").option("value");
        return a;
    }

    function getToDateValue() {
        var a = $("#dateToDate").dxDateBox("instance").option("value");
        return a;
    }

    function ViewData() {
        $("#dxDataGrid").dxDataGrid("instance").refresh();
    }
</script>

